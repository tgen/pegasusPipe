##### Author: Megan/Szabi #####
##### Parameterized PBS Script ####
#PBS -S /bin/bash
#PBS -N pegasus_DEXseq
#PBS -l walltime=60:00:00
#PBS -M mrussell@tgen.org
#PBS -m a
#PBS -j oe
#PBS -o /${D}/oeFiles/${PBS_JOBNAME}_${PBS_JOBID}.out 
##PBS -e /${D}/oeFiles/${PBS_JOBNAME}_${PBS_JOBID}.err

module load R/3.2.1

beginTime=`date +%s`
machine=`hostname`
echo "### NODE: $machine"
echo "### DIR: ${DIR}"
echo "### NXT1: ${NXT1}"
echo "### RUNDIR: ${RUNDIR}"
echo "### DEXSEQPATH: ${DEXSEQPATH}"
echo "### DEXSEQCONFIG: ${DEXSEQCONFIG}"
echo "### DEXSEQOUTDIR: ${DEXSEQOUTDIR}"
echo "### OBJECTDATA: ${OBJECTDATA}"
echo "### DEXSEQOUTFILE: ${DEXSEQOUTFILE}"
echo "### KALLISTOOUT: ${KALLISTOOUT}"

base_Dir=${KALLISTOOUT}
configFile=${DEXSEQCONFIG}
outData=${DEXSEQOUTFILE}
objectData=${OBJECTDATA}

##use DEXSeq R script to perform differential exon usage analysis.

perf stat Rscript --vanilla ${DEXSEQPATH} \
	${DEXSEQCONFIG} \
	${DEXSEQGFF} \
	${DEXSEQOUTFILE} \
	${OBJECTDATA} 2> ${DEXSEQOUTDIR}.DEXseq.perfOut
	if [ $? -eq 0 ] ; then
		touch ${DEXSEQOUTDIR}.DEXseqPass
	else
		touch ${DEXSEQOUTDIR}.DEXseqFail
	fi


rm ${DEXSEQOUTDIR}.DEXseqInQueue
endTime=`date +%s`
elapsed=$(( $endTime - $beginTime ))
(( hours=$elapsed/3600 ))
(( mins=$elapsed%3600/60 ))
echo "RUNTIME:DEXSEQ:$hours:$mins" > ${DIR}.DEXseq.totalTime
echo "### Ending DEXseq."
